#include<bits/stdc++.h>
using namespace std;

class Node
{
    public:
    int data;
    Node* next;
    
    public:
    Node(int data1, Node* next1=nullptr)
    {
        data=data1;
        next = next1;
    }
};

Node* arr2ll(vector<int>v) //array to linkedlist
{
    Node* head= new Node(v[0]);
    Node* mover=head;
    for(size_t i=1;i<v.size();++i)
    {
        mover->next=new Node(v[i]);
        mover=mover->next;
    }
    return head;
}

Node* deletehead(Node* head) //delete head
{
    if(head==NULL) return head;
    Node* temp=head;
    head=head->next;
    delete temp;
    return head;
}

Node* deletetail(Node* head) //delete tail
{
    if(head==NULL || head->next==NULL) return head;
    Node* temp=head;
    while(temp->next->next!=NULL)
    {
        temp=temp->next;
    }
    delete(temp->next);
    temp->next=nullptr;
    return head;
}

void print(Node* head) //print linked list
{
    while(head)
    {
        cout<<head->data<<" ";
        head=head->next;
    }
    cout<<endl;
}

Node* deletek(Node* head, int k) //delete specified node
{
    if(head==NULL) return head;
    if(k==1)
    {
     return head;
    }
    int cnt=0;
    Node* temp=head;
    Node* prev=NULL;
    while(temp)
    {
     cnt++;
     if(cnt==k)
     {
         prev->next=prev->next->next;
         delete temp;
         break;
     }
     prev=temp;
     temp=temp->next;
    }
    return head;
}

Node* deleteel(Node* head, int el) //delete specified element
{
    if(head==NULL) return head;
    if(head->data==el)
    {
    Node* temp=head;
    head=head->next;
    delete temp;
    return head;
    }
    Node* temp=head;
    Node* prev=NULL;
    while(temp)
    {
     if(temp->data==el)
     {
         prev->next=prev->next->next;
         delete temp;
         break;
     }
     prev=temp;
     temp=temp->next;
    }
    return head;
}

Node* newhead(Node* head, int val) //new head
{
    return new Node(val,head);
}

Node* newtail(Node* head, int val) //new tail
{
    if(head==NULL)
    {
        return new Node(val);
    }
    
    Node* temp= head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    Node* newNode=new Node(val);
    temp->next=newNode;
    return head;
}

Node* insertatk(Node* head, int val, int k) //insert at specified position
{
    if(head==NULL)
    {
        if(k==1)
        {
            return new Node(val);
        }
        else return head;
    }
    if(k==1)
    {
        return new Node(val, head);
    }
    int cnt=0;
    Node* temp=head;
    while(temp)
    {
        cnt++;
        if(cnt==(k-1))
        {
            Node* x=new Node(val,temp->next);
            temp->next=x;
            break;
        }
        temp=temp->next;
    }
    return head;
}

Node* insertbeforevalue(Node* head, int k, int val) //insert k before specified value val
{
    if(head==NULL)
    {
        return NULL;
    }
    if(head->data==val)
    {
        return new Node(k, head);
    }
    Node* temp=head;
    while(temp->next!=NULL)
    {
        if(temp->next->data==val)
        {
            Node* x=new Node(k,temp->next);
            temp->next=x;
            break;
        }
        temp=temp->next;
    }
    return head;
}
    
int main()
{
    vector<int>v={12,22,32,42,52};
    Node* head=arr2ll(v);
    head = insertbeforevalue(head,323,52);
    print(head);
}