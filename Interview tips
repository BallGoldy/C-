I have quite a bit of experience in both development and conducting interviews. I’d like to share some thoughts with you from the interviewer’s perspective.

During interviews, people often look for someone they can understand and connect with. Even if there are some gaps in knowledge, it’s clear when a person can think logically and is willing to figure things out.

Apart from knowing the basics of a programming language, frameworks, and technologies, what really makes a difference is how you apply them in practice. Real-world development is more about solving problems, maintaining clean architecture, and being able to adapt to changing requirements than just knowing syntax or APIs.

In real work, algorithms are not used that much. Of course, algorithmic thinking is a valuable skill that helps you write structured code, but it's greatly overrated—especially by those who are job hunting. Much more important skills are:

Writing clean and high-quality code
Being able to understand documentation
Working well in a team
Communicating clearly
Figuring things out even in unfamiliar situations
Thinking critically
Patterns knowledge

I’d recommend focusing on soft skills and general programming abilities:

Build your own project and put it on GitHub
Read books that help improve code quality, like Robert Martin’s books, Effective Java, and others
Always strive to improve your code quality—consider finding a mentor or using AI as one
There are books on how to prepare for interviews—read them too. Interviewing is a separate skill that requires preparation
English. There’s always room for improvement. The higher your level, the better

And always remember: not passing an interview doesn’t mean you’re a bad programmer. Sometimes your skills just don’t match a specific vacancy, or you got unlucky with the interviewer. I know many excellent professionals who are not good at interviews but are outstanding at their jobs. So don’t give up—keep improving and keep trying. Finding your first job is always the hardest part.
